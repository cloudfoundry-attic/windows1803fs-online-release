<% if_p("windows-rootfs.trusted_certs") do |trusted_certs| %>
  $ErrorActionPreference = "Stop";
  trap { $host.SetShouldExit(1) }
  Write-Host "Starting windows1803fs pre-start"

  # In practice, there should be a single image uri, however
  # if there's ever more than one, this will take much longer
  # and we should move mutext handling into the cert-injector
  # and create a mutex _per_ image uri.
  $mtx = New-Object System.Threading.Mutex($false, "RootfsMutex")
  $thirtyMinutes = 30 * 60 * 1000
  if (!$mtx.WaitOne($thirtyMinutes)) {
    throw "Could not acquire RootfsMutex after 30 minutes"
  }

  $certData = "<%= trusted_certs %>"
  $encodedCertData = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($certData))

  $grootDriverStore = "<%= link('groot').p('groot.driver_store') %>"
  $grootImageUris = "<%= link('groot').p('groot.cached_image_uris').join(" ") %>"
  $certInjectorBin = "c:\var\vcap\packages\cert-injector\cert-injector.exe"
  & $certInjectorBin $grootDriverStore $encodedCertData $grootImageUris.Split(" ")
  if ($LASTEXITCODE -ne 0) {
    exit $LASTEXITCODE
  }

  $mtx.ReleaseMutex()
<% end %>
